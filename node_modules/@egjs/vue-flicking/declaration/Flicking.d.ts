import ListDiffer, { DiffResult } from "@egjs/list-differ";
import Vue, { CreateElement, VNode } from "vue";
import VanillaFlicking, { Plugin } from "@egjs/flicking";
declare const Flicking: import("vue/types/vue").ExtendedVue<Vue, {
    vanillaFlicking: VanillaFlicking;
    pluginsDiffer: ListDiffer<Plugin>;
    slotDiffer: ListDiffer<VNode>;
    diffResult: DiffResult<VNode> | null;
}, {
    _getSlots(): any;
    _fillKeys(): void;
    _bindEvents(): void;
    _checkPlugins(): void;
    _getPanels(h: CreateElement, initialized: boolean): any;
    _getVirtualPanels(h: CreateElement, initialized: boolean): any;
}, unknown, {
    readonly viewportTag: string;
    readonly cameraTag: string;
    readonly hideBeforeInit: boolean;
    readonly firstPanelSize: string;
    readonly options: Partial<import("@egjs/flicking").FlickingOptions>;
    readonly plugins: Plugin[];
    readonly status: import("@egjs/flicking").Status;
}>;
declare type VueFlicking = InstanceType<typeof Flicking>;
interface Flicking extends VueFlicking, VanillaFlicking {
}
export default Flicking;
