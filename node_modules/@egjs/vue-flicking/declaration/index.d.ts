import { VueConstructor } from "vue";
import Flicking from "./Flicking";
declare global {
    interface Window {
        Vue: VueConstructor;
    }
}
declare const version = "#__VERSION__#";
declare const install: (Vue: VueConstructor) => void;
declare const plugin: {
    Flicking: import("vue/types/vue").ExtendedVue<import("vue").default, {
        vanillaFlicking: import("@egjs/flicking/declaration/Flicking").default;
        pluginsDiffer: import("@egjs/list-differ/declaration/ListDiffer").default<import("@egjs/flicking").Plugin>;
        slotDiffer: import("@egjs/list-differ/declaration/ListDiffer").default<import("vue").VNode>;
        diffResult: import("@egjs/list-differ").DiffResult<import("vue").VNode>;
    }, {
        _getSlots(): any;
        _fillKeys(): void;
        _bindEvents(): void;
        _checkPlugins(): void;
        _getPanels(h: import("vue").CreateElement, initialized: boolean): any;
        _getVirtualPanels(h: import("vue").CreateElement, initialized: boolean): any;
    }, unknown, {
        readonly viewportTag: string;
        readonly cameraTag: string;
        readonly hideBeforeInit: boolean;
        readonly firstPanelSize: string;
        readonly options: Partial<import("@egjs/flicking").FlickingOptions>;
        readonly plugins: import("@egjs/flicking").Plugin[];
        readonly status: import("@egjs/flicking").Status;
    }>;
    install: (Vue: VueConstructor) => void;
    version: string;
};
export * from "@egjs/flicking";
export default plugin;
export { version, Flicking, install };
